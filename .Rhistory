random.order=FALSE, colors=brewer.pal(8, "Dark2"))
wordcloud(dm_greens$word, dm_greens$freq, min.freq = 10, max.words=50,
random.order=FALSE, colors=brewer.pal(8, "Dark2"))
wordcloud(dm_greens$word, dm_greens$freq, min.freq = 10, max.words=50,
random.order=FALSE, colors=brewer.pal(8, "Dark2"))
wordcloud(dm_greens$word, dm_greens$freq, min.freq = 10, max.words=50,
random.order=FALSE, colors=brewer.pal(8, "Dark2"))
wordcloud(dm_greens$word, dm_greens$freq, min.freq = 10, max.words=50,
random.order=FALSE, colors=brewer.pal(8, "Dark2"))
wordcloud(dm_greens$word, dm_greens$freq, min.freq = 10, max.words=50,
random.order=FALSE, colors=brewer.pal(8, "Dark2"))
wordcloud(dm_greens$word, dm_greens$freq, min.freq = 10, max.words=50,
random.order=FALSE, colors=brewer.pal(8, "Dark2"))
wordcloud(dm_greens$word, dm_greens$freq, min.freq = 10, max.words=50,
random.order=FALSE, colors=brewer.pal(8, "Dark2"))
wordcloud(dm_greens$word, dm_greens$freq, min.freq = 10, max.words=50,
random.order=FALSE, colors=brewer.pal(8, "Dark2"))
# Creating term document matrix applying some transformations
tdm_labour <- TermDocumentMatrix(tweet_labour_corpus,
control = list(removePunctuation = TRUE, wordLengths=c(5, 15),
stopwords = c("labour", "party","govt","government", "minister", "prime" ,stopwords("english")),
removeNumbers = TRUE, tolower = TRUE))
# define tdm as matrix so we can calculate word frequencies
tdm_labour.matrix <- as.matrix(tdm_labour)
# get word counts in decreasing order
word_labour_freqs <- sort(rowSums(tdm_labour.matrix), decreasing=TRUE)
# create a data frame with words and their frequencies
dm_labour <- data.frame(word=names(word_labour_freqs), freq=word_labour_freqs)
# plot wordcloud with words that appear at least 50 times
wordcloud(dm_labour$word, dm_labour$freq, min.freq =5 , max.words=50,
random.order=FALSE, colors=brewer.pal(8, "Dark2"))
# plot wordcloud with words that appear at least 50 times
wordcloud(dm_labour$word, dm_labour$freq, min.freq =5 , max.words=50,
random.order=FALSE, colors=brewer.pal(8, "Dark2"))
# plot wordcloud with words that appear at least 50 times
wordcloud(dm_labour$word, dm_labour$freq, min.freq =5 , max.words=50,
random.order=FALSE, colors=brewer.pal(8, "Dark2"))
######################
#For NZNational
# Creating term document matrix applying some transformations
tdm_National <- TermDocumentMatrix(tweet_National_corpus,
control = list(removePunctuation = TRUE, wordLengths=c(5, 15),
stopwords = c("national", "labour","govt","government","tweets", stopwords("english")),
removeNumbers = TRUE, tolower = TRUE))
# define tdm as matrix so we can calculate word frequencies
tdm_National.matrix <- as.matrix(tdm_National)
# get word counts in decreasing order
word_National_freqs <- sort(rowSums(tdm_National.matrix), decreasing=TRUE)
# create a data frame with words and their frequencies
dm_National <- data.frame(word=names(word_National_freqs), freq=word_National_freqs)
# plot wordcloud with words that appear at least 50 times
wordcloud(dm_National$word, dm_National$freq, min.freq = 2, max.words=50,
random.order=FALSE, colors=brewer.pal(8, "Dark2"))
# plot wordcloud with words that appear at least 50 times
wordcloud(dm_National$word, dm_National$freq, min.freq = 2, max.words=50,
random.order=FALSE, colors=brewer.pal(8, "Dark2"))
# plot wordcloud with words that appear at least 50 times
wordcloud(dm_National$word, dm_National$freq, min.freq = 2, max.words=50,
random.order=FALSE, colors=brewer.pal(8, "Dark2"))
# plot wordcloud with words that appear at least 50 times
wordcloud(dm_National$word, dm_National$freq, min.freq = 2, max.words=50,
random.order=FALSE, colors=brewer.pal(8, "Dark2"))
# plot wordcloud with words that appear at least 50 times
wordcloud(dm_National$word, dm_National$freq, min.freq = 2, max.words=50,
random.order=FALSE, colors=brewer.pal(8, "Dark2"))
# plot wordcloud with words that appear at least 50 times
wordcloud(dm_National$word, dm_National$freq, min.freq = 2, max.words=50,
random.order=FALSE, colors=brewer.pal(8, "Dark2"))
wordcloud(dm_greens$word, dm_greens$freq, min.freq = 4, max.words=50,
random.order=FALSE, colors=brewer.pal(8, "Dark2"))
wordcloud(dm_greens$word, dm_greens$freq, min.freq = 4, max.words=50,
random.order=FALSE, colors=brewer.pal(8, "Dark2"))
wordcloud(dm_greens$word, dm_greens$freq, min.freq = 4, max.words=50,
random.order=FALSE, colors=brewer.pal(8, "Dark2"))
wordcloud(dm_greens$word, dm_greens$freq, min.freq = 4, max.words=50,
random.order=FALSE, colors=brewer.pal(8, "Dark2"))
wordcloud(dm_greens$word, dm_greens$freq, min.freq = 4, max.words=50,
random.order=FALSE, colors=brewer.pal(8, "Dark2"))
wordcloud(dm_greens$word, dm_greens$freq, min.freq = 4, max.words=50,
random.order=FALSE, colors=brewer.pal(8, "Dark2"))
wordcloud(dm_greens$word, dm_greens$freq, min.freq = 4, max.words=50,
random.order=FALSE, colors=brewer.pal(8, "Dark2"))
wordcloud(dm_greens$word, dm_greens$freq, min.freq = 4, max.words=50,
random.order=FALSE, colors=brewer.pal(8, "Dark2"))
wordcloud(dm_greens$word, dm_greens$freq, min.freq = 4, max.words=50,
random.order=FALSE, colors=brewer.pal(8, "Dark2"))
wordcloud(dm_greens$word, dm_greens$freq, min.freq = 25, max.words=50,
random.order=FALSE, colors=brewer.pal(8, "Dark2"))
wordcloud(dm_greens$word, dm_greens$freq, min.freq = 25, max.words=50,
random.order=FALSE, colors=brewer.pal(8, "Dark2"))
wordcloud(dm_greens$word, dm_greens$freq, min.freq = 25, max.words=50,
random.order=FALSE, colors=brewer.pal(8, "Dark2"))
wordcloud(dm_greens$word, dm_greens$freq, min.freq = 25, max.words=50,
random.order=FALSE, colors=brewer.pal(8, "Dark2"))
wordcloud(dm_labour$word, dm_labour$freq, min.freq =40 , max.words=50,
random.order=FALSE, colors=brewer.pal(8, "Dark2"))
wordcloud(dm_labour$word, dm_labour$freq, min.freq =40 , max.words=50,
random.order=FALSE, colors=brewer.pal(8, "Dark2"))
wordcloud(dm_labour$word, dm_labour$freq, min.freq =40 , max.words=50,
random.order=FALSE, colors=brewer.pal(8, "Dark2"))
wordcloud(dm_labour$word, dm_labour$freq, min.freq =40 , max.words=50,
random.order=FALSE, colors=brewer.pal(8, "Dark2"))
wordcloud(dm_labour$word, dm_labour$freq, min.freq =14 , max.words=50,
random.order=FALSE, colors=brewer.pal(8, "Dark2"))
wordcloud(dm_labour$word, dm_labour$freq, min.freq =14 , max.words=50,
random.order=FALSE, colors=brewer.pal(8, "Dark2"))
wordcloud(dm_labour$word, dm_labour$freq, min.freq =14 , max.words=50,
random.order=FALSE, colors=brewer.pal(8, "Dark2"))
# Creating term document matrix applying some transformations
tdm_National <- TermDocumentMatrix(tweet_National_corpus,
control = list(removePunctuation = TRUE, wordLengths=c(5, 15),
stopwords = c("national", "labour","govt","government","tweets", stopwords("english")),
removeNumbers = TRUE, tolower = TRUE))
# define tdm as matrix so we can calculate word frequencies
tdm_National.matrix <- as.matrix(tdm_National)
# get word counts in decreasing order
word_National_freqs <- sort(rowSums(tdm_National.matrix), decreasing=TRUE)
# create a data frame with words and their frequencies
dm_National <- data.frame(word=names(word_National_freqs), freq=word_National_freqs)
# plot wordcloud with words that appear at least 50 times
wordcloud(dm_National$word, dm_National$freq, min.freq = 2, max.words=50,
random.order=FALSE, colors=brewer.pal(8, "Dark2"))
wordcloud(dm_National$word, dm_National$freq, min.freq = 2, max.words=50,
random.order=FALSE, colors=brewer.pal(8, "Dark2"))
wordcloud(dm_National$word, dm_National$freq, min.freq = 2, max.words=50,
random.order=FALSE, colors=brewer.pal(8, "Dark2"))
wordcloud(dm_National$word, dm_National$freq, min.freq = 2, max.words=50,
random.order=FALSE, colors=brewer.pal(8, "Dark2"))
wordcloud(dm_National$word, dm_National$freq, min.freq = 2, max.words=50,
random.order=FALSE, colors=brewer.pal(8, "Dark2"))
wordcloud(dm_National$word, dm_National$freq, min.freq = 2, max.words=50,
random.order=FALSE, colors=brewer.pal(8, "Dark2"))
wordcloud(dm_National$word, dm_National$freq, min.freq = 2, max.words=50,
random.order=FALSE, colors=brewer.pal(8, "Dark2"))
sentiments_Greens <- c(pos_Greens, neg_Greens, neut_Greens)
names(sentiments_Greens) <- c("Positive", "Negative", "Neutral")
pie(sentiments_Greens, main="Sentiment Analysis for Greens",col=colors)
# Load required Packages
install.packages("tm")
install.packages("wordcloud")
install.packages("RColorBrewer")
install.packages("SnowballC")
install.packages("syuzhet")
# Load libraries into R Studio
library(tm)
library(wordcloud)
library(RColorBrewer)
library(SnowballC)
library(syuzhet)
tweets_Greens.df<- read.csv("./Political Parties/NZGreens_tweets.csv")
tweets_labour.df<- read.csv("./Political Parties/nzlabour_tweets.csv")
tweets_National.df<- read.csv("./Political Parties/NZNationalParty_tweets.csv")
head(tweets_Greens.df)
head(tweets_labour.df)
head(tweets_National.df)
# Display 'text' field of data frame
# For NZGreens
head(tweets_Greens.df$text)
tweets_Greens.df2<- tweets_Greens.df$text
# For NZlabour
head(tweets_labour.df$text)
tweets_labour.df2<- tweets_labour.df$text
# For NZNational
head(tweets_National.df$text)
tweets_National.df2<- tweets_National.df$text
invalid_strings <- is.na(iconv(tweets_Greens.df2, "UTF-8", "UTF-8"))
tweets_Greens.df2[invalid_strings]
tweets_Greens.df2 <- iconv(tweets_Greens.df2, "latin1", "UTF-8")
invalid_strings <- is.na(iconv(tweets_labour.df2, "UTF-8", "UTF-8"))
tweets_labour.df2[invalid_strings]
tweets_labour.df2 <- iconv(tweets_labour.df2, "latin1", "UTF-8")
invalid_strings <- is.na(iconv(tweets_National.df2, "UTF-8", "UTF-8"))
tweets_National.df2[invalid_strings]
tweets_National.df2 <- iconv(tweets_National.df2, "latin1", "UTF-8")
# For NZGreens
tweets_Greens.df2<- gsub("www\\.[^\\s]+|@\\S+|http\\S+|#\\S+|<[^>]+>", "", tweets_Greens.df2)
tweets_Greens.df2<- gsub("[^a-zA-Z0-9\\s]|[[:cntrl:]]|[[:punct:]]", " ", tweets_Greens.df2)
head(tweets_Greens.df2)
# For NZlabour
tweets_labour.df2<- gsub("www\\.[^\\s]+|@\\S+|http\\S+|#\\S+|<[^>]+>", "", tweets_labour.df2)
tweets_labour.df2<- gsub("[^a-zA-Z0-9\\s]|[[:cntrl:]]|[[:punct:]]", " ", tweets_labour.df2)
head(tweets_labour.df2)
# For NZNational
tweets_National.df2<- gsub("www\\.[^\\s]+|@\\S+|http\\S+|#\\S+|<[^>]+>", "", tweets_National.df2)
tweets_National.df2<- gsub("[^a-zA-Z0-9\\s]|[[:cntrl:]]|[[:punct:]]", " ", tweets_National.df2)
head(tweets_National.df2)
#
# Convert data frame into a vector before performing sentiment analysis
word_Greens.df<- as.vector(tweets_Greens.df2)
word_labour.df<- as.vector(tweets_labour.df2)
word_National.df<- as.vector(tweets_National.df2)
# Perform sentiment analysis to score tweets on emotion
emotion_Greens.df<- get_nrc_sentiment(word_Greens.df)
emotion_labour.df<- get_nrc_sentiment(word_labour.df)
emotion_National.df<- get_nrc_sentiment(word_National.df)
# Combine tweets to sentiment scores
emotion_Greens.df2<- cbind(tweets_Greens.df2, emotion_Greens.df)
head(emotion_Greens.df2)
emotion_labour.df2<- cbind(tweets_labour.df2, emotion_labour.df)
head(emotion_labour.df2)
emotion_National.df2<- cbind(tweets_National.df2, emotion_National.df)
head(emotion_National.df2)
# Score tweets based on positive and negative sentiment
sent_Greens.value<- get_sentiment(word_Greens.df)
sent_labour.value<- get_sentiment(word_labour.df)
sent_National.value<- get_sentiment(word_National.df)
# Filtering based on positive, negative and neutral tweets
# For NZGreens
positive_Greens.tweets<- word_Greens.df[sent_Greens.value>0]
head(positive_Greens.tweets)
negative_Greens.tweets <- word_Greens.df[sent_Greens.value < 0]
head(negative_Greens.tweets)
neutral_Greens.tweets <- word_Greens.df[sent_Greens.value == 0]
head(neutral_Greens.tweets)
# For NZlabour
positive_labour.tweets<- word_labour.df[sent_labour.value>0]
head(positive_labour.tweets)
negative_labour.tweets <- word_labour.df[sent_labour.value < 0]
head(negative_labour.tweets)
neutral_labour.tweets <- word_labour.df[sent_labour.value == 0]
head(neutral_labour.tweets)
# For NZNational
positive_National.tweets<- word_National.df[sent_National.value>0]
head(positive_National.tweets)
negative_National.tweets <- word_National.df[sent_National.value < 0]
head(negative_National.tweets)
neutral_National.tweets <- word_National.df[sent_National.value == 0]
head(neutral_National.tweets)
################################################
#Visual Representation of Data
# Counting the number of positive, negative and neutral tweets
# For NZGreens
pos_Greens <- length(positive_Greens.tweets)
neg_Greens<- length(negative_Greens.tweets)
neut_Greens<- length(neutral_Greens.tweets)
# For NZlabour
pos_labour<- length(positive_labour.tweets)
neg_labour<- length(negative_labour.tweets)
neut_labour<- length(neutral_labour.tweets)
# For NZNational
pos_National<- length(positive_National.tweets)
neg_National<- length(negative_National.tweets)
neut_National<- length(neutral_National.tweets)
# Defining the colors you want to use
colors <- c("green", "red", "pink")
# For NZGreens
sentiments_Greens <- c(pos_Greens, neg_Greens, neut_Greens)
names(sentiments_Greens) <- c("Positive", "Negative", "Neutral")
pie(sentiments_Greens, main="Sentiment Analysis for Greens",col=colors)
# For NZlabour
sentiments_labour <- c(pos_labour, neg_labour, neut_labour)
names(sentiments_labour) <- c("Positive", "Negative", "Neutral")
pie(sentiments_labour, main="Sentiment Analysis for Labour",col=colors)
# For NZNational
sentiments_National <- c(pos_National, neg_National, neut_National)
names(sentiments_National) <- c("Positive", "Negative", "Neutral")
pie(sentiments_National, main="Sentiment Analysis for National",col=colors)
# Selecting and displaying the most positive sentiment (highest sent.value)
most_Greens.positive <- word_Greens.df[sent_Greens.value == max(sent_Greens.value)]
most_Greens.positive
most_labour.positive <- word_labour.df[sent_labour.value == max(sent_labour.value)]
most_labour.positive
most_National.positive <- word_National.df[sent_National.value == max(sent_National.value)]
most_National.positive
# Selecting and displaying the most negative sentiment (lowest sent.value)
most_Greens.negative <- word_Greens.df[sent_Greens.value == min(sent_Greens.value)]
most_Greens.negative
most_labour.negative <- word_labour.df[sent_labour.value == min(sent_labour.value)]
most_labour.negative
most_National.negative <- word_National.df[sent_National.value == min(sent_National.value)]
most_National.negative
# We can also display a selection of neutral tweets
head(neutral_Greens.tweets)
head(neutral_labour.tweets)
head(neutral_National.tweets)
# Creating a corpus (collection of words) from our data frame of cleaned tweets
tweet_Greens_corpus <- Corpus(VectorSource(word_Greens.df))
tweet_labour_corpus <- Corpus(VectorSource(word_labour.df))
tweet_National_corpus <- Corpus(VectorSource(word_National.df))
# Creating term document matrix applying some transformations
tdm_Greens <- TermDocumentMatrix(tweet_Greens_corpus,
control = list(removePunctuation = TRUE, wordLengths=c(5, 15),
stopwords = c("Party","Green", "government","govt",stopwords("english")),
removeNumbers = TRUE, tolower = TRUE))
# define tdm as matrix so we can calculate word frequencies
tdm_Greens.matrix <- as.matrix(tdm_Greens)
# get word counts in decreasing order
word_Greens_freqs <- sort(rowSums(tdm_Greens.matrix), decreasing=TRUE)
# create a data frame with words and their frequencies
dm_greens <- data.frame(word=names(word_Greens_freqs), freq=word_Greens_freqs)
# plot wordcloud with words that appear at least 50 times
wordcloud(dm_greens$word, dm_greens$freq, min.freq = 2, max.words=50,
random.order=FALSE, colors=brewer.pal(8, "Dark2"))
######################
#For NZlabour
# Creating term document matrix applying some transformations
tdm_labour <- TermDocumentMatrix(tweet_labour_corpus,
control = list(removePunctuation = TRUE, wordLengths=c(5, 15),
stopwords = c("labour", "party","kiwis","government", "minister", "prime" ,stopwords("english")),
removeNumbers = TRUE, tolower = TRUE))
# define tdm as matrix so we can calculate word frequencies
tdm_labour.matrix <- as.matrix(tdm_labour)
# get word counts in decreasing order
word_labour_freqs <- sort(rowSums(tdm_labour.matrix), decreasing=TRUE)
# create a data frame with words and their frequencies
dm_labour <- data.frame(word=names(word_labour_freqs), freq=word_labour_freqs)
# plot wordcloud with words that appear at least 50 times
wordcloud(dm_labour$word, dm_labour$freq, min.freq =14 , max.words=50,
random.order=FALSE, colors=brewer.pal(8, "Dark2"))
######################
#For NZNational
# Creating term document matrix applying some transformations
tdm_National <- TermDocumentMatrix(tweet_National_corpus,
control = list(removePunctuation = TRUE, wordLengths=c(5, 15),
stopwords = c("national","govt","government","party", stopwords("english")),
removeNumbers = TRUE, tolower = TRUE))
# define tdm as matrix so we can calculate word frequencies
tdm_National.matrix <- as.matrix(tdm_National)
# get word counts in decreasing order
word_National_freqs <- sort(rowSums(tdm_National.matrix), decreasing=TRUE)
# create a data frame with words and their frequencies
dm_National <- data.frame(word=names(word_National_freqs), freq=word_National_freqs)
# plot wordcloud with words that appear at least 50 times
wordcloud(dm_National$word, dm_National$freq, min.freq = 2, max.words=50,
random.order=FALSE, colors=brewer.pal(8, "Dark2"))
dm_greens
library(tm)
library(wordcloud)
library(RColorBrewer)
library(SnowballC)
library(syuzhet)
tweets_Greens.df<- read.csv("./Political Parties/NZGreens_tweets.csv")
tweets_labour.df<- read.csv("./Political Parties/nzlabour_tweets.csv")
tweets_National.df<- read.csv("./Political Parties/NZNationalParty_tweets.csv")
head(tweets_Greens.df$text)
tweets_Greens.df2<- tweets_Greens.df$text
# For NZlabour
head(tweets_labour.df$text)
tweets_labour.df2<- tweets_labour.df$text
# For NZNational
head(tweets_National.df$text)
tweets_National.df2<- tweets_National.df$text
#########################
invalid_strings <- is.na(iconv(tweets_Greens.df2, "UTF-8", "UTF-8"))
tweets_Greens.df2[invalid_strings]
tweets_Greens.df2 <- iconv(tweets_Greens.df2, "latin1", "UTF-8")
invalid_strings <- is.na(iconv(tweets_labour.df2, "UTF-8", "UTF-8"))
tweets_labour.df2[invalid_strings]
tweets_labour.df2 <- iconv(tweets_labour.df2, "latin1", "UTF-8")
invalid_strings <- is.na(iconv(tweets_National.df2, "UTF-8", "UTF-8"))
tweets_National.df2[invalid_strings]
tweets_National.df2 <- iconv(tweets_National.df2, "latin1", "UTF-8")
############
# For NZGreens
tweets_Greens.df2<- gsub("www\\.[^\\s]+|@\\S+|http\\S+|#\\S+|<[^>]+>", "", tweets_Greens.df2)
tweets_Greens.df2<- gsub("[^a-zA-Z0-9\\s]|[[:cntrl:]]|[[:punct:]]", " ", tweets_Greens.df2)
head(tweets_Greens.df2)
# For NZlabour
tweets_labour.df2<- gsub("www\\.[^\\s]+|@\\S+|http\\S+|#\\S+|<[^>]+>", "", tweets_labour.df2)
tweets_labour.df2<- gsub("[^a-zA-Z0-9\\s]|[[:cntrl:]]|[[:punct:]]", " ", tweets_labour.df2)
head(tweets_labour.df2)
# For NZNational
tweets_National.df2<- gsub("www\\.[^\\s]+|@\\S+|http\\S+|#\\S+|<[^>]+>", "", tweets_National.df2)
tweets_National.df2<- gsub("[^a-zA-Z0-9\\s]|[[:cntrl:]]|[[:punct:]]", " ", tweets_National.df2)
head(tweets_National.df2)
# Convert data frame into a vector before performing sentiment analysis
word_Greens.df<- as.vector(tweets_Greens.df2)
word_labour.df<- as.vector(tweets_labour.df2)
word_National.df<- as.vector(tweets_National.df2)
# Perform sentiment analysis to score tweets on emotion
emotion_Greens.df<- get_nrc_sentiment(word_Greens.df)
emotion_labour.df<- get_nrc_sentiment(word_labour.df)
emotion_National.df<- get_nrc_sentiment(word_National.df)
emotion_Greens.df2<- cbind(tweets_Greens.df2, emotion_Greens.df)
head(emotion_Greens.df2)
emotion_labour.df2<- cbind(tweets_labour.df2, emotion_labour.df)
head(emotion_labour.df2)
emotion_National.df2<- cbind(tweets_National.df2, emotion_National.df)
head(emotion_National.df2)
# Score tweets based on positive and negative sentiment
sent_Greens.value<- get_sentiment(word_Greens.df)
sent_labour.value<- get_sentiment(word_labour.df)
sent_National.value<- get_sentiment(word_National.df)
positive_Greens.tweets<- word_Greens.df[sent_Greens.value>0]
head(positive_Greens.tweets)
negative_Greens.tweets <- word_Greens.df[sent_Greens.value < 0]
head(negative_Greens.tweets)
neutral_Greens.tweets <- word_Greens.df[sent_Greens.value == 0]
head(neutral_Greens.tweets)
# For NZlabour
positive_labour.tweets<- word_labour.df[sent_labour.value>0]
head(positive_labour.tweets)
negative_labour.tweets <- word_labour.df[sent_labour.value < 0]
head(negative_labour.tweets)
neutral_labour.tweets <- word_labour.df[sent_labour.value == 0]
head(neutral_labour.tweets)
# For NZNational
positive_National.tweets<- word_National.df[sent_National.value>0]
head(positive_National.tweets)
negative_National.tweets <- word_National.df[sent_National.value < 0]
head(negative_National.tweets)
neutral_National.tweets <- word_National.df[sent_National.value == 0]
head(neutral_National.tweets)
#########
# Counting the number of positive, negative and neutral tweets
# For NZGreens
pos_Greens <- length(positive_Greens.tweets)
neg_Greens<- length(negative_Greens.tweets)
neut_Greens<- length(neutral_Greens.tweets)
# For NZlabour
pos_labour<- length(positive_labour.tweets)
neg_labour<- length(negative_labour.tweets)
neut_labour<- length(neutral_labour.tweets)
# For NZNational
pos_National<- length(positive_National.tweets)
neg_National<- length(negative_National.tweets)
neut_National<- length(neutral_National.tweets)
# Using the values in pos, neut and neg, we can plot a pie chart
# Defining the colors you want to use
colors <- c("green", "red", "pink")
sentiments_Greens <- c(pos_Greens, neg_Greens, neut_Greens)
names(sentiments_Greens) <- c("Positive", "Negative", "Neutral")
pie(sentiments_Greens, main="Sentiment Analysis for Greens",col=colors)
# For NZlabour
sentiments_labour <- c(pos_labour, neg_labour, neut_labour)
names(sentiments_labour) <- c("Positive", "Negative", "Neutral")
pie(sentiments_labour, main="Sentiment Analysis for Labour",col=colors)
# For NZNational
sentiments_National <- c(pos_National, neg_National, neut_National)
names(sentiments_National) <- c("Positive", "Negative", "Neutral")
pie(sentiments_National, main="Sentiment Analysis for National",col=colors)
most_Greens.positive <- word_Greens.df[sent_Greens.value == max(sent_Greens.value)]
most_Greens.positive
most_labour.positive <- word_labour.df[sent_labour.value == max(sent_labour.value)]
most_labour.positive
most_National.positive <- word_National.df[sent_National.value == max(sent_National.value)]
most_National.positive
# Selecting and displaying the most negative sentiment (lowest sent.value)
most_Greens.negative <- word_Greens.df[sent_Greens.value == min(sent_Greens.value)]
most_Greens.negative
most_labour.negative <- word_labour.df[sent_labour.value == min(sent_labour.value)]
most_labour.negative
most_National.negative <- word_National.df[sent_National.value == min(sent_National.value)]
most_National.negative
# We can also display a selection of neutral tweets
head(neutral_Greens.tweets)
head(neutral_labour.tweets)
head(neutral_National.tweets)
# Creating a corpus (collection of words) from our data frame of cleaned tweets
tweet_Greens_corpus <- Corpus(VectorSource(word_Greens.df))
tweet_labour_corpus <- Corpus(VectorSource(word_labour.df))
tweet_National_corpus <- Corpus(VectorSource(word_National.df))
# Creating a corpus (collection of words) from our data frame of cleaned tweets
tweet_Greens_corpus <- Corpus(VectorSource(word_Greens.df))
tweet_labour_corpus <- Corpus(VectorSource(word_labour.df))
tweet_National_corpus <- Corpus(VectorSource(word_National.df))
#For NZGreens
# Creating term document matrix applying some transformations
tdm_Greens <- TermDocumentMatrix(tweet_Greens_corpus,
control = list(removePunctuation = TRUE, wordLengths=c(5, 15),
stopwords = c("Party","Green", "government","govt",stopwords("english")),
removeNumbers = TRUE, tolower = TRUE))
# define tdm as matrix so we can calculate word frequencies
tdm_Greens.matrix <- as.matrix(tdm_Greens)
# get word counts in decreasing order
word_Greens_freqs <- sort(rowSums(tdm_Greens.matrix), decreasing=TRUE)
# create a data frame with words and their frequencies
dm_greens <- data.frame(word=names(word_Greens_freqs), freq=word_Greens_freqs)
# plot wordcloud with words that appear at least 50 times
wordcloud(dm_greens$word, dm_greens$freq, min.freq = 2, max.words=50,
random.order=FALSE, colors=brewer.pal(8, "Dark2"))
######################
#For NZlabour
# Creating term document matrix applying some transformations
tdm_labour <- TermDocumentMatrix(tweet_labour_corpus,
control = list(removePunctuation = TRUE, wordLengths=c(5, 15),
stopwords = c("labour", "party","kiwis","government", "minister", "prime" ,stopwords("english")),
removeNumbers = TRUE, tolower = TRUE))
# define tdm as matrix so we can calculate word frequencies
tdm_labour.matrix <- as.matrix(tdm_labour)
# get word counts in decreasing order
word_labour_freqs <- sort(rowSums(tdm_labour.matrix), decreasing=TRUE)
# create a data frame with words and their frequencies
dm_labour <- data.frame(word=names(word_labour_freqs), freq=word_labour_freqs)
# plot wordcloud with words that appear at least 50 times
wordcloud(dm_labour$word, dm_labour$freq, min.freq =14 , max.words=50,
random.order=FALSE, colors=brewer.pal(8, "Dark2"))
######################
#For NZNational
# Creating term document matrix applying some transformations
tdm_National <- TermDocumentMatrix(tweet_National_corpus,
control = list(removePunctuation = TRUE, wordLengths=c(5, 15),
stopwords = c("national","govt","government","party", stopwords("english")),
removeNumbers = TRUE, tolower = TRUE))
# define tdm as matrix so we can calculate word frequencies
tdm_National.matrix <- as.matrix(tdm_National)
# get word counts in decreasing order
word_National_freqs <- sort(rowSums(tdm_National.matrix), decreasing=TRUE)
# create a data frame with words and their frequencies
dm_National <- data.frame(word=names(word_National_freqs), freq=word_National_freqs)
# plot wordcloud with words that appear at least 50 times
wordcloud(dm_National$word, dm_National$freq, min.freq = 2, max.words=50,
random.order=FALSE, colors=brewer.pal(8, "Dark2"))
library(tm)
library(wordcloud)
library(RColorBrewer)
library(SnowballC)
library(syuzhet)
library(NLP)
library(ggplot2)
# Reading the CSV files
tweet_NZNationalParty.df <- read.csv("C:\\Users\\hamna\\OneDrive\\Desktop\\Data Analytics\\Assignment One Hamna Qadir\\Assignment01_HamnaQadir_2221237\\Political Parties\\NZNationalParty_tweets.csv")
